[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "qilbee-os"
description = "Qilbee OS - Enterprise Conversational Operating System"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AICUBE Technology", email = "support@aicube.technology"}
]
maintainers = [
    {name = "AICUBE Technology", email = "support@aicube.technology"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: System :: Distributed Computing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "conversational", "automation", "enterprise", "multi-agent"]
requires-python = ">=3.11"
dependencies = [
    "anthropic>=0.25.0",
    "celery[redis]>=5.3.0",
    "kombu>=5.3.0",
    "grpcio>=1.54.0",
    "textual>=0.40.0",
    "rich>=13.0.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "aiohttp>=3.8.0",
    "pika>=1.3.0",
    "redis>=4.5.0",
    "pydantic>=2.0.0",
    "jsonschema>=4.17.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/aicubeKruz/qilbee-os"
Documentation = "https://github.com/aicubeKruz/qilbee-os/docs"
Repository = "https://github.com/aicubeKruz/qilbee-os"
Issues = "https://github.com/aicubeKruz/qilbee-os/issues"

[project.optional-dependencies]
gui = [
    "pyautogui>=0.9.54",
    "pillow>=10.0.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "psutil>=5.9.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
]

[project.scripts]
qilbee-os = "qilbee_os.main:main"
qilbee-agent = "qilbee_os.agent:main"
qilbee-worker = "qilbee_os.worker:main"

[project.entry-points."qilbee.tools"]
# Built-in tools will be registered here
computer_tool = "qilbee_os.tools.computer:ComputerTool"
text_editor_tool = "qilbee_os.tools.text_editor:TextEditorTool"
bash_tool = "qilbee_os.tools.bash:BashTool"
qube_tool = "qilbee_os.tools.qube:QubeTool"

[tool.setuptools]
packages = ["qilbee_os"]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {attr = "qilbee_os.__version__"}

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --disable-warnings"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselected with -m 'not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/qilbee_os"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]